{"version":3,"sources":["context/ThemeContext.js","component/switcher.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","theme","setTheme","Switcher","tContext","useContext","className","type","onChange","checked","bgTheme","fgTheme","console","log","App","useState","Provider","value","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAOeA,G,KALMC,IAAMC,cAAc,CACrCC,MAAO,GACPC,SAAU,gB,OCAC,SAASC,IAEpB,IAAMC,EAAWC,qBAAWP,GAY5B,OACI,wBAAOQ,UAAU,mBAAjB,UACI,uBAAOC,KAAK,WAAWC,SAAU,WAXjCJ,EAASH,MAAMQ,QAGfL,EAASF,SAAS,CAAEQ,QAAS,UAAWC,QAAU,UAAWF,SAAS,IAFtEL,EAASF,SAAS,CAAEQ,QAAS,UAAWC,QAAU,UAAWF,SAAS,IAG1EG,QAAQC,IAAIT,GACZQ,QAAQC,IAAIT,EAASH,OACrBW,QAAQC,IAAIT,EAASF,aAMjB,sBAAMI,UAAU,c,MCfb,SAASQ,IAEtB,MAA0BC,mBAAS,CACjCL,QAAS,UACTC,QAAS,UACTF,SAAS,IAHX,mBAAOR,EAAP,KAAcC,EAAd,KAMA,OACE,cAAC,EAAac,SAAd,CAAuBC,MAAO,CAAChB,QAAOC,YAAtC,SACE,sBAAKI,UAAU,MAAMY,MAAO,CAACC,gBAAiBlB,EAAMS,SAApD,UACE,oBAAIJ,UAAU,eAAeY,MAAO,CAACE,MAAOnB,EAAMU,SAAlD,8BACA,cAACR,EAAD,SClBR,IAYekB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9b2aa0e4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ThemeContext = React.createContext({\r\n    theme: {},\r\n    setTheme: () => {}\r\n});\r\n\r\nexport default ThemeContext;","import React, { useContext } from 'react';\r\nimport './switcher.css';\r\nimport ThemeContext from './../context/ThemeContext';\r\n\r\nexport default function Switcher() {\r\n\r\n    const tContext = useContext(ThemeContext);\r\n\r\n    let switchHandler = () => {\r\n        if(!tContext.theme.checked) \r\n            tContext.setTheme({ bgTheme: '#34495e', fgTheme : '#ffffff', checked: true });\r\n        else \r\n            tContext.setTheme({ bgTheme: '#ffffff', fgTheme : '#34495e', checked: false });\r\n        console.log(tContext);\r\n        console.log(tContext.theme);\r\n        console.log(tContext.setTheme);\r\n    }\r\n\r\n    return(\r\n        <label className=\"switch-container\">\r\n            <input type=\"checkbox\" onChange={() => {switchHandler()}}/>\r\n            <span className=\"slider\"></span>\r\n        </label>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Switcher from './component/switcher';\nimport ThemeContext from './context/ThemeContext';\nimport './App.css';\n\n\nexport default function App() {\n\n  const [theme, setTheme] = useState({\n    bgTheme: '#ffffff',\n    fgTheme: '#34495e',\n    checked: false\n  });\n\n  return ( \n    <ThemeContext.Provider value={{theme, setTheme}}>\n      <div className=\"app\" style={{backgroundColor: theme.bgTheme}}>\n        <h2 className=\"welcome-text\" style={{color: theme.fgTheme}}> Theme switcher </h2> \n        <Switcher />\n      </div>\n    </ThemeContext.Provider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}